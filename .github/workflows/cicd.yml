name: CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t banderglitch/telegrambot . 

      - name: Publish image to Docker Hub
        run: docker push banderglitch/telegrambot:latest   

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Debugging Secrets
        run: |
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "EC2_USER: ${{ secrets.EC2_USER }}"
          echo "PORT: 22"
          echo "EC2_SSH_KEY is set"  # Just to confirm the key is present, not printing the key itself

      - name: Test SSH Connection String
        run: |
          ssh -i <(echo "${{ secrets.EC2_SSH_KEY }}") -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} -p 22 echo "SSH connection established"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull banderglitch/telegrambot:latest
            docker rm -f nodejsContainer || true
            docker run -d -p 80:3000 --name nodejsContainer banderglitch/telegrambot:latest
